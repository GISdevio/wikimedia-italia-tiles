services:
  postgres:
    build: services/postgres
    environment: &env
      POSTGRES_PASSWORD: test_password
      POSTGRES_USER: osm
      POSTGRES_DB: osm
      # https://www.postgresql.org/docs/current/libpq-envars.html
      PGHOST: postgres
      PGPASSWORD: test_password
      PGUSER: osm
      PGDATABASE: osm
    healthcheck:
      test: ["CMD", "pg_isready"]
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    #command: ["postgres", "-c", "log_statement=all"] # debug
    #command: ["postgres", "-c", "fsync=off", "-c", "synchronous_commit=off", "-c", "full_page_writes=off"] # import
  external-data:
    build: services/external-data
    depends_on:
      - postgres
    environment:
      <<: *env
    volumes:
      - ./data/external:/data
  osm2pgsql:
    build: services/osm2pgsql
    depends_on:
      - postgres
    environment:
      <<: *env
      REPLICATION_URL: "https://planet.openstreetmap.org/replication/day/"
      INITIAL_PBF: /data/init/europe-latest.osm.pbf
    volumes:
      - ./data/init:/data/init:ro
      - ./data/cache:/data/cache
  renderd:
    build:
      context: services/web
      dockerfile: renderd/Dockerfile
    depends_on:
      - postgres
    environment:
      <<: *env
    volumes:
      - renderd-socket:/run/renderd
      - ./data/tiles:/var/cache/renderd/tiles
      - ./data/layers_dummy:/syles/hiking/layers:ro
  apache:
    build:
      context: services/web
      dockerfile: apache/Dockerfile
    depends_on:
      - renderd
    volumes:
      - renderd-socket:/run/renderd
      - ./data/tiles:/var/cache/renderd/tiles:ro
    ports:
      - 8081:8081

volumes:
  renderd-socket:
